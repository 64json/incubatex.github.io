function countUp() {
  var e = new CountUp("counter1", 0, 150, 0, 3, special);
  e.start();
  var o = new CountUp("counter2", 0, 30, 0, 3, options);
  o.start();
  var t = new CountUp("counter3", 0, 1, 0, 3, options);
  t.start()
}! function(e) {
  e(function() {
    e(".button-collapse").sideNav({
      closeOnClick: !0
    }), e(".parallax").parallax(), e(".scrollspy").scrollSpy()
  })
}(jQuery), window.onblur = function() {
  document.title = "IncubateSF"
}, window.onfocus = function() {
  document.title = "IncubateSF"
};
  var easingFn = function(e, n, o, t) {
    var a = (e /= t) * e,
      s = a * e;
    return n + o * (s + -3 * a + 3 * e)
  },
  options = {
    useEasing: !0,
    useGrouping: !1,
    separator: ",",
    decimal: ".",
    prefix: "",
    suffix: ""
  },
  special = {
    useEasing: !0,
    useGrouping: !1,
    separator: ",",
    decimal: ".",
    prefix: "",
    suffix: "+"
  };
countUp();
var stuff = [{
  selector: "#counter1",
  offset: 0,
  callback: "countUp()"
}];
Materialize.scrollFire(stuff);


// New code for IncubateSF

// Button hover animations
$('.header-button').hover(function(){
	$(this).css({
		backgroundColor: "white",
		color: "#ff8a65"
	});
}, function(){
	$(this).css({
		backgroundColor: "transparent",
		color: "white"
	});
});

// navbar color
$(window).scroll(function (event) {
	$('nav').removeClass('z-depth-0');

    var scroll = $(window).scrollTop();
    if(scroll <= 0)
    	$('nav').addClass('z-depth-0');

    var scale = Math.max(0, Math.min(1, scroll/$(window).height()));
    $('nav').css("background-color", "rgb(255, 255, 255, "+scale+")");
    $('.brand-logo').css("opacity", scale);

    var finalR = 255;		// change these values to change what color 
    var finalG = 87;		// the white text becomes as the user scrolls down
    var finalB = 34; 

    $('.nav-text').css("color", rgbToHex(255-(255-finalR)*scale,255-(255-finalG)*scale,255-(255-finalB)*scale));
});


function componentToHex(c) {
    var hex = c.toString(16);
    return hex.length == 1 ? "0" + hex : hex;
}

function rgbToHex(r, g, b) {
    return "#" + componentToHex(Math.round(r)) + componentToHex(Math.round(g)) + componentToHex(Math.round(b));
}


